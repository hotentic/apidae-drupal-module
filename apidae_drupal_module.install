<?php

use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;
use Symfony\Component\Yaml\Yaml;

/**
* Adding privdesc1 field to touristic objects
*/
function apidae_drupal_module_update_8101() {
    $module_path = drupal_get_path('module', 'apidae_drupal_module');

    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.storage.node.ao_privdesc1.yml'));
    if (!FieldStorageConfig::loadByName($yml['entity_type'], $yml['field_name'])) {
        FieldStorageConfig::create($yml)->save();
    }

    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.field.node.apidae_object.ao_privdesc1.yml'));
    if (!FieldConfig::loadByName($yml['entity_type'], $yml['bundle'], $yml['field_name'])) {
        FieldConfig::create($yml)->save();
    }
}

/**
 * Adding additional private desc fields and contacts to touristic objects
 */
function apidae_drupal_module_update_8102() {
  $module_path = drupal_get_path('module', 'apidae_drupal_module');

  $fields = ['privdesc2', 'privdesc3', 'contact1', 'contact2', 'contact3'];

  foreach ($fields as $field) {
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.storage.node.ao_'.$field.'.yml'));
    if (!FieldStorageConfig::loadByName($yml['entity_type'], $yml['field_name'])) {
      FieldStorageConfig::create($yml)->save();
    }
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.field.node.apidae_object.ao_'.$field.'.yml'));
    if (!FieldConfig::loadByName($yml['entity_type'], $yml['bundle'], $yml['field_name'])) {
      FieldConfig::create($yml)->save();
    }
  }
}

/**
 * Adding internal criteria fields
 */
function apidae_drupal_module_update_8103() {
  $module_path = drupal_get_path('module', 'apidae_drupal_module');

  $fields = ['internal1', 'internal2', 'internal3'];

  foreach ($fields as $field) {
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.storage.node.ao_'.$field.'.yml'));
    if (!FieldStorageConfig::loadByName($yml['entity_type'], $yml['field_name'])) {
      FieldStorageConfig::create($yml)->save();
    }
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.field.node.apidae_object.ao_'.$field.'.yml'));
    if (!FieldConfig::loadByName($yml['entity_type'], $yml['bundle'], $yml['field_name'])) {
      FieldConfig::create($yml)->save();
    }
  }
}

/**
 * Adding type-specific criteria and links fields
 */
function apidae_drupal_module_update_8104() {
  $module_path = drupal_get_path('module', 'apidae_drupal_module');

  $fields = ['type_criteria', 'link1', 'link2', 'link3', 'link4', 'link5'];

  foreach ($fields as $field) {
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.storage.node.ao_'.$field.'.yml'));
    if (!FieldStorageConfig::loadByName($yml['entity_type'], $yml['field_name'])) {
      FieldStorageConfig::create($yml)->save();
    }
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.field.node.apidae_object.ao_'.$field.'.yml'));
    if (!FieldConfig::loadByName($yml['entity_type'], $yml['bundle'], $yml['field_name'])) {
      FieldConfig::create($yml)->save();
    }
  }
}

/**
 * Adding managing entity fields
 */
function apidae_drupal_module_update_8105() {
  $module_path = drupal_get_path('module', 'apidae_drupal_module');

  $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.storage.node.ao_entity.yml'));
  if (!FieldStorageConfig::loadByName($yml['entity_type'], $yml['field_name'])) {
    FieldStorageConfig::create($yml)->save();
  }
  $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.field.node.apidae_object.ao_entity.yml'));
  if (!FieldConfig::loadByName($yml['entity_type'], $yml['bundle'], $yml['field_name'])) {
    FieldConfig::create($yml)->save();
  }
}

/**
 * Adding types_manifestation, date, complement_accueil and animals fields
 */
function apidae_drupal_module_update_8106() {
  $module_path = drupal_get_path('module', 'apidae_drupal_module');

  $fields = ['manifestation_type', 'date', 'host_complement', 'animals', 'desc_motor_handicap', 'adapted_tourism'];

  foreach ($fields as $field) {
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.storage.node.ao_'.$field.'.yml'));
    if (!FieldStorageConfig::loadByName($yml['entity_type'], $yml['field_name'])) {
      FieldStorageConfig::create($yml)->save();
    }
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.field.node.apidae_object.ao_'.$field.'.yml'));
    if (!FieldConfig::loadByName($yml['entity_type'], $yml['bundle'], $yml['field_name'])) {
      FieldConfig::create($yml)->save();
    }
  }
}

/**
 * Adding animals_complement, structure_information
 */
function apidae_drupal_module_update_8107() {
  $module_path = drupal_get_path('module', 'apidae_drupal_module');

  $fields = ['animals_complement', 'structure_information'];

  foreach ($fields as $field) {
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.storage.node.ao_'.$field.'.yml'));
    if (!FieldStorageConfig::loadByName($yml['entity_type'], $yml['field_name'])) {
      FieldStorageConfig::create($yml)->save();
    }
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.field.node.apidae_object.ao_'.$field.'.yml'));
    if (!FieldConfig::loadByName($yml['entity_type'], $yml['bundle'], $yml['field_name'])) {
      FieldConfig::create($yml)->save();
    }
  }
}

/**
 * Adding dates field
 */
function apidae_drupal_module_update_8108() {
  $module_path = drupal_get_path('module', 'apidae_drupal_module');

  $fields = ['dates'];

  foreach ($fields as $field) {
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.storage.node.ao_'.$field.'.yml'));
    if (!FieldStorageConfig::loadByName($yml['entity_type'], $yml['field_name'])) {
      FieldStorageConfig::create($yml)->save();
    }
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.field.node.apidae_object.ao_'.$field.'.yml'));
    if (!FieldConfig::loadByName($yml['entity_type'], $yml['bundle'], $yml['field_name'])) {
      FieldConfig::create($yml)->save();
    }
  }
}

/**
 * Adding pictures medium field
 */
function apidae_drupal_module_update_8109() {
  $module_path = drupal_get_path('module', 'apidae_drupal_module');

  $fields = ['pictures_medium'];

  foreach ($fields as $field) {
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.storage.node.ao_'.$field.'.yml'));
    if (!FieldStorageConfig::loadByName($yml['entity_type'], $yml['field_name'])) {
      FieldStorageConfig::create($yml)->save();
    }
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.field.node.apidae_object.ao_'.$field.'.yml'));
    if (!FieldConfig::loadByName($yml['entity_type'], $yml['bundle'], $yml['field_name'])) {
      FieldConfig::create($yml)->save();
    }
  }
}

/**
 * Adding links field
 */
function apidae_drupal_module_update_8110() {
  $module_path = drupal_get_path('module', 'apidae_drupal_module');

  $fields = ['links'];

  foreach ($fields as $field) {
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.storage.node.ao_'.$field.'.yml'));
    if (!FieldStorageConfig::loadByName($yml['entity_type'], $yml['field_name'])) {
      FieldStorageConfig::create($yml)->save();
    }
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.field.node.apidae_object.ao_'.$field.'.yml'));
    if (!FieldConfig::loadByName($yml['entity_type'], $yml['bundle'], $yml['field_name'])) {
      FieldConfig::create($yml)->save();
    }
  }
}

/**
 * Adding ao_linked_objects field
 */
function apidae_drupal_module_update_8111() {
  $module_path = drupal_get_path('module', 'apidae_drupal_module');

  $fields = ['linked_objects'];

  foreach ($fields as $field) {
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.storage.node.ao_'.$field.'.yml'));
    if (!FieldStorageConfig::loadByName($yml['entity_type'], $yml['field_name'])) {
      FieldStorageConfig::create($yml)->save();
    }
    $yml = Yaml::parse(file_get_contents($module_path . '/config/install/field.field.node.apidae_object.ao_'.$field.'.yml'));
    if (!FieldConfig::loadByName($yml['entity_type'], $yml['bundle'], $yml['field_name'])) {
      FieldConfig::create($yml)->save();
    }
  }
}